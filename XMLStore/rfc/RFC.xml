<?xml version="1.0"?>
<!DOCTYPE rfc SYSTEM "rfc.dtd">
<rfc author="Some employee" date="2000/08/28" to="Model Comp">
 <miseries>
  <misery name="WAP-site" importance="LOW">
   <summary>
    Model Comp still hasn't its own WAP-site
   </summary>
   <description>
    All technologies, hardware and software infrastructures which
    are necessairy for Model Comp to build up its own WAP-site, are available.
    Nevertheless, no WAP-site has been built up yet.
   </description>
   <related>
    <dangerRef name="WAP-site"/>
   </related>
  </misery>
  <misery name="Modelling" importance="HIGH">
   <summary>
    Adequate modelling and structuring methods are not applied
   </summary>
   <description>
    Terms like XML and UML are well known to the staff, but knowledge
    about their underlying concepts and techniques is very limited. Even
    more, these terms come together with a misterious aura of incomprehension,
    incertitude and strangeness. As a result, opportunities of "clean"
    engineering are not recognized as such.
   </description>
   <related>
    <dangerRef name="Inefficiency"/>
    <dangerRef name="Incoherence"/>
   </related>
  </misery>
  <misery name="Web-Applications-CF">
   <summary>
    The approach of building Web sites is still code and fix
   </summary>
   <description>
    Model Comp's home page is primary built with FrontPage, a convenience tool
    which mainly lacks of automization/customization opportunities and control.
    Just like other RAD (Rapid Application Development) tools, it invites the
    developer to focus on the speed of getting the first shaky version ready.
    Maintenance of such applications is a difficult task. Furthermore, high
    end applications demand for more developer control during their evolution.
   </description>
   <related>
    <miseryRef name="Web-Applications-E"/>
    <dangerRef name="Inefficiency"/>
    <dangerRef name="Web-Application"/>
   </related>
  </misery>
  <misery name="Web-Applications-E">
   <summary>
    There is still a lack of in-house experience of building Web-Applications
   </summary>
   <description>
    Even if some already got in touch with parts of the Web-Applications
    problem domain, nobody really experienced a whole Web-Application life-cycle
    from its requirement engineering down to its deprecation. The technical
    background necessairy can be rather easily achieved, but the lack of
    experience will remain for a while.
   </description>
   <related>
    <miseryRef name="Web-Applications-CF"/>
    <dangerRef name="Web-Application"/>
   </related>
  </misery>
  <misery name="3-tier">
   <summary>
    The Web server is still a one tier system
   </summary>
   <description>
    The development system (DS), quality assurance system (QAS) and production
    system (PS) are united on one server. To be sure, that development won't
    affect the PS, the developer has to find some workarounds. Nevertheless,
    no real DS exists, so there is no QAS, too.
   </description>
   <related>
    <dangerRef name="Web-Application"/>
   </related>
  </misery>
 </miseries>
 <dangers>
  <danger name="Reuse">
   <summary>
    Non-application of strategies targeted at reuse
   </summary>
   <description>
    Reuse aims at a cost reduction, quality increase and short development
    or evolution cycles. The lack of strategies to enforce reusement are hence
    underscoring achieving these three goals.
    Reuse can take place on different levels: design, code, data (f.e. documentation),
    process, general resources (f.e. non IT resources)
   </description>
  </danger>
  <danger name="Web-Application">
   <summary>
    Lousy quality of Web-Applications, long evolution cycles
   </summary>
   <description>
    Development of Web-Applications is a long, error-prone procedure, just
    as their maintenance is. Furthermore, the lack of inherent quality is
    not transparent to the outside.
   </description>
   <related>
    <dangerRef name="Reuse"/>
   </related>
  </danger>
  <danger name="WAP-site" importance="LOW">
   <summary>
    No existing publicly available WAP-site of Model Comp
   </summary>
   <description>
    Model Comp doesn't run any WAP-site. Therefore, knowledge and experience
    acquired in this problem domain is at minimum. Even worse, the ability
    of Model Comp to build up WAP-site is not shown to the outside world.
   </description>
  </danger>
  <danger name="Inefficiency" importance="HIGH">
   <summary>
    The working habits are inefficient
   </summary>
   <description>
    The staff is not used to work in an efficient manner. Goals are achieved,
    but the way towards them is far away from being optimal. The cause are sometimes
    sub-optimal working procedures, but more likely the absence of any of them.
    Some characteristics of this situation are the permanent re-invention
    of the wheel, the existence of (staff-) personal standards and the
    lack of interoperability between solutions achieved with a disparity in
    the measure of personal or time.
   </description>
   <related>
    <dangerRef name="Reuse"/>
   </related>
  </danger>
  <danger name="Incoherence">
   <summary>
    Difficult maintenance due to incoherent methods and models
   </summary>
   <description>
    The maintainer has to spend a large amount of time, only in order to
    understand the developer's comprehension and approach of terms, methods
    and models. This leads to the developer deliberately being chosen as
    maintainer, so that he hasn't to deal with others' solutions. This trend
    is dangerous because the inter-project communication and exchange (of
    personal) is at minimum. Furthermore, individuals are not replacable at
    all.
   </description>
   <related>
    <dangerRef name="Inefficiency"/>
   </related>
  </danger>
 </dangers>
 <antidotes>
  <antidote name="3-tier">
   <summary>
    Walk towards a three tier architecture
   </summary>
   <description>
    Establish a DS and write first generation tools for quality management.
    These tools shall control the data and control flow between the DS and
    PS.
    After stabilization and getting acquainted to quality management, launch
    a QAS tier between, and enhance the tool functionality to control the
    whole system and not only the flow between two sub-tiers.
    Problems that will be encountered are f.e. the token management and the approvement
    process definition.
   </description>
   <related>
    <dangerRef name="Web-Application"/>
   </related>
  </antidote>
  <antidote name="Demo-Web-Application">
   <summary>
    Staff member's assistance in building initial Web-Application
   </summary>
   <description>
    One or two staff member shall be absorbed as part time assistants of
    an initial Web-Application project. That project shall be rather free
    of time restraints and pressure. The project shall have a very
    clean approach towards processes and standards and shall be referencable
    later as a muster.
   </description>
   <related>
    <dangerRef name="Web-Application"/>
   </related>
  </antidote>
  <antidote name="DocuStandards">
   <summary>
    Establish documentation standards
   </summary>
   <description>
    Regulate under which circumstances a documentation has been edited and
    what scope it should have. The only use for documentation is reuse,
    and it's only one step towards reuse. According to which part has to
    be reused, the level of documentation can vary between code, process,...
    It is a good idea, to focus in the beginning on the less abstract reuse level, that is
    on the code level.
   </description>
   <related>
    <dangerRef name="Incoherence"/>
   </related>
  </antidote>
  <antidote name="XML">
   <summary>
    Let parts of the staff have their first steps in XML
   </summary>
   <description>
    XML is an universal way to structure data. Apart of its strength and
    elegance to do so, the major adventage is its broad tool support and
    acceptance.
    Staff shall be trained in XML and the specifications coming along with
    it (f.e. XSLT, DOM), in order to get hand and both, its strength and
    its support.
   </description>
   <related>
    <dangerRef name="Incoherence"/>
    <dangerRef name="Inefficiency"/>
   </related>
  </antidote>
  <antidote name="UML">
   <summary>
    Let parts of the staff have their first steps in UML
   </summary>
   <description>
    UML is a suite of modelling languages, which enable a precise overview
    which is functional, data-related and behaviour-related. Even more,
    its use-cases part is an elegant way to do requirement engineering.
    The software development process gets more traceable if applying a process
    building upon UML, like the RUP.
    Staff shall be trained in UML (at least its core), in order to do both,
    to model traceable and to model consistent on the project and inter-project level.
   </description>
   <related>
    <dangerRef name="Incoherence"/>
    <dangerRef name="Inefficiency"/>
   </related>
  </antidote>
  <antidote name="WAP-presence">
   <summary>
    Build up a WAP-presence for Model Comp
   </summary>
   <description>
    Build a WAP-site, to give Model Comp a name card for the wireless web.
   </description>
   <related>
    <dangerRef name="WAP-site"/>
   </related>
  </antidote>
 </antidotes>
</rfc>
